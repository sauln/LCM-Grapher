"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

class ubms_info_t(object):
    __slots__ = ["utime", "voltage", "current", "max_discharge_current", "max_regenerative_current", "contactor_opening_request", "discharge_contactor_state", "insulation_measure_state", "charge_contactor_state", "precharge_failure"]

    def __init__(self):
        self.utime = 0
        self.voltage = 0
        self.current = 0
        self.max_discharge_current = 0
        self.max_regenerative_current = 0
        self.contactor_opening_request = False
        self.discharge_contactor_state = False
        self.insulation_measure_state = ""
        self.charge_contactor_state = False
        self.precharge_failure = False

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(ubms_info_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qhhiibb", self.utime, self.voltage, self.current, self.max_discharge_current, self.max_regenerative_current, self.contactor_opening_request, self.discharge_contactor_state))
        __insulation_measure_state_encoded = self.insulation_measure_state.encode('utf-8')
        buf.write(struct.pack('>I', len(__insulation_measure_state_encoded)+1))
        buf.write(__insulation_measure_state_encoded)
        buf.write("\0")
        buf.write(struct.pack(">bb", self.charge_contactor_state, self.precharge_failure))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != ubms_info_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ubms_info_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ubms_info_t()
        self.utime, self.voltage, self.current, self.max_discharge_current, self.max_regenerative_current, self.contactor_opening_request, self.discharge_contactor_state = struct.unpack(">qhhiibb", buf.read(22))
        __insulation_measure_state_len = struct.unpack('>I', buf.read(4))[0]
        self.insulation_measure_state = buf.read(__insulation_measure_state_len)[:-1].decode('utf-8', 'replace')
        self.charge_contactor_state, self.precharge_failure = struct.unpack(">bb", buf.read(2))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ubms_info_t in parents: return 0
        tmphash = (0xa9838bb19842b9f9) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ubms_info_t._packed_fingerprint is None:
            ubms_info_t._packed_fingerprint = struct.pack(">Q", ubms_info_t._get_hash_recursive([]))
        return ubms_info_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

