"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

class ibps_sys_t(object):
    __slots__ = ["utime", "min_to_empty", "sys_msg", "percent_charge"]

    def __init__(self):
        self.utime = 0
        self.min_to_empty = 0
        self.sys_msg = ""
        self.percent_charge = 0

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(ibps_sys_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qh", self.utime, self.min_to_empty))
        __sys_msg_encoded = self.sys_msg.encode('utf-8')
        buf.write(struct.pack('>I', len(__sys_msg_encoded)+1))
        buf.write(__sys_msg_encoded)
        buf.write("\0")
        buf.write(struct.pack(">h", self.percent_charge))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != ibps_sys_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ibps_sys_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ibps_sys_t()
        self.utime, self.min_to_empty = struct.unpack(">qh", buf.read(10))
        __sys_msg_len = struct.unpack('>I', buf.read(4))[0]
        self.sys_msg = buf.read(__sys_msg_len)[:-1].decode('utf-8', 'replace')
        self.percent_charge = struct.unpack(">h", buf.read(2))[0]
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ibps_sys_t in parents: return 0
        tmphash = (0xc6c2ffcf7368d84a) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ibps_sys_t._packed_fingerprint is None:
            ibps_sys_t._packed_fingerprint = struct.pack(">Q", ibps_sys_t._get_hash_recursive([]))
        return ibps_sys_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

